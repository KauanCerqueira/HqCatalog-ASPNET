@model List<HqCatalog.Business.Models.Hq>

@{
    ViewData["Title"] = "Catálogo de HQs";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Catálogo de HQs</h2>

        <!-- Barra de pesquisa com tamanho correto -->
        <div class="search-container">
            <div class="input-group">
                <input type="text" id="searchInput" class="form-control search-input" placeholder="Pesquisar HQs...">
                <button class="btn btn-primary search-button" id="searchButton">
                    <i class="fa fa-search"></i>
                </button>
            </div>
        </div>

        @if (User.IsInRole("Admin"))
        {
            <!-- Botão de adicionar HQ -->
            <a href="@Url.Action("Create", "Hq", new { area = "Site" })" class="btn btn-success add-hq-button">
                + Adicionar HQ
            </a>
        }

    </div>

    <div class="row">
        <!-- Sidebar de Filtros -->
        <div class="col-md-3">
            <div class="filter-sidebar">
                <h4><strong>Filtros</strong></h4>
                <hr>
                <h5>Editora</h5>
                <div id="editora-filtros">
                    @foreach (var editora in Model.Select(hq => hq.Editora).Distinct().ToList())
                    {
                        <label>
                            <input type="checkbox" class="filter-checkbox" data-filter="editora" value="@editora"> @editora
                        </label>
                        <br>
                    }
                </div>
                <h5>Gênero</h5>
                <div id="genero-filtros">
                    @foreach (var genero in Model.Select(hq => hq.Genero).Distinct().ToList())
                    {
                        <label>
                            <input type="checkbox" class="filter-checkbox" data-filter="genero" value="@genero"> @genero
                        </label>
                        <br>
                    }
                </div>
            </div>
        </div>

        <!-- Lista de HQs -->
        <div class="col-md-9">
            <div class="row" id="hq-list">
                @foreach (var hq in Model.ToList())
                {
                    @await Html.PartialAsync("_HqCard", hq)
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const checkboxes = document.querySelectorAll(".filter-checkbox");

            checkboxes.forEach(checkbox => {
                checkbox.addEventListener("change", applyFilters);
            });

            function applyFilters() {
                const selectedEditoras = [...document.querySelectorAll('input[data-filter="editora"]:checked')].map(cb => cb.value);
                const selectedGeneros = [...document.querySelectorAll('input[data-filter="genero"]:checked')].map(cb => cb.value);

                const filtros = {
                    Editoras: selectedEditoras,
                    Generos: selectedGeneros
                };

                console.log("🔹 Enviando Filtros para o Servidor:", filtros);

                fetch("/Site/Hq/FiltrarHqs", { // 🔹 Corrigindo a URL para a rota correta
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(filtros)
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`❌ Erro na requisição: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log("✅ Dados Recebidos:", data);

                    if (!Array.isArray(data)) {
                        throw new Error("❌ Resposta inesperada do servidor.");
                    }

                    const hqList = document.getElementById("hq-list");
                    hqList.innerHTML = ""; // Limpa a lista antes de adicionar os novos itens

                    if (data.length === 0) {
                        hqList.innerHTML = `<p class="text-center">Nenhuma HQ encontrada com os filtros selecionados.</p>`;
                        return;
                    }

                    data.forEach(hq => {
                        hqList.innerHTML += `
                            <div class="col-lg-4 col-md-6 col-sm-12 d-flex justify-content-center">
                                <div class="hq-card text-center shadow-sm">
                                    <div class="hq-editora-bubble" style="background-color: ${hq.editoraCor}">
                                        <span>${hq.editora}</span>
                                    </div>
                                    <img src="/imagens/hqs/${hq.imagemUrl}" class="hq-image" alt="${hq.titulo}">
                                    <div class="hq-info">
                                        <h5 class="hq-title">${hq.titulo}</h5>
                                        <p class="hq-description">${hq.sinopse}</p>
                                        <a href="/Site/Hq/Detalhes/${hq.id}" class="hq-button" style="background-color: ${hq.editoraCor}">
                                            Descubra Agora
                                        </a>
                                    </div>
                                </div>
                            </div>
                        `;
                    });
                })
                .catch(error => console.error("❌ Erro ao filtrar HQs:", error));
            }
        });
    </script>
}
