@{
    ViewData["Title"] = "Cadastro";
}

<link rel="stylesheet" href="~/css/auth.css">

<div class="auth-container">
    <div class="auth-card">
        <h2 class="text-center">Cadastro</h2>

        <div id="errorMessage" class="alert alert-danger text-center d-none"></div>
        <div id="successMessage" class="alert alert-success text-center d-none"></div>

        <form id="registerForm" asp-area="Site" asp-controller="Account" asp-action="Register" method="post">
            @Html.AntiForgeryToken() <!-- 🔹 Token CSRF Correto -->

            <div class="mb-3">
                <label for="nome" class="form-label">Nome</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="fa fa-user"></i></span>
                    <input type="text" class="form-control" id="nome" name="nome" placeholder="Digite seu nome" required>
                </div>
            </div>

            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="fa fa-envelope"></i></span>
                    <input type="email" class="form-control" id="email" name="email" placeholder="Digite seu email" required>
                </div>
            </div>

            <div class="mb-3">
                <label for="password" class="form-label">Senha</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="fa fa-lock"></i></span>
                    <input type="password" class="form-control" id="password" name="password" placeholder="Digite sua senha" required>
                </div>
                <small class="text-muted">A senha deve conter no mínimo 6 caracteres, incluindo uma letra maiúscula e um número.</small>
            </div>

            <div class="mb-3">
                <label for="confirmPassword" class="form-label">Confirme a Senha</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="fa fa-lock"></i></span>
                    <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" placeholder="Confirme sua senha" required>
                </div>
            </div>

            <button type="submit" id="registerButton" class="btn btn-success w-100">Cadastrar</button>
        </form>

        <div class="text-center mt-3">
            <a href="@Url.Action("Login", "Account", new { area = "Site" })">Já tem uma conta? Entrar</a>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const registerForm = document.getElementById("registerForm");
        const registerButton = document.getElementById("registerButton");
        const errorMessage = document.getElementById("errorMessage");
        const successMessage = document.getElementById("successMessage");

        if (registerForm) {
            registerForm.addEventListener("submit", function (event) {
                event.preventDefault(); // 🔹 Impede envio incorreto
                console.log("🔹 Enviando Registro via fetch...");

                registerButton.disabled = true; // 🔹 Evita múltiplos cliques

                const formData = new FormData(registerForm);
                const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;

                fetch('/Site/Account/Register', {
                    method: 'POST',
                    body: new URLSearchParams(formData),
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'RequestVerificationToken': csrfToken
                    }
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`Erro HTTP: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    registerButton.disabled = false; // 🔹 Reativa o botão

                    if (data.success) {
                        console.log("✅ Registro realizado e login efetuado com sucesso!");
                        successMessage.innerText = "Cadastro realizado! Redirecionando...";
                        successMessage.classList.remove("d-none");
                        setTimeout(() => {
                            window.location.href = "/Site/Home/Index"; // 🔹 Redireciona para a Home automaticamente
                        }, 2000);
                    } else {
                        console.error("❌ Erro ao registrar:", data.error);
                        errorMessage.innerText = data.error;
                        errorMessage.classList.remove("d-none");
                    }
                })
                .catch(error => {
                    registerButton.disabled = false; // 🔹 Reativa o botão em caso de erro
                    console.error("❌ Erro na requisição de Registro:", error);
                    errorMessage.innerText = "Erro ao processar o cadastro. Tente novamente.";
                    errorMessage.classList.remove("d-none");
                });
            });
        }
    });
</script>

<script src="~/js/auth.js"></script>
