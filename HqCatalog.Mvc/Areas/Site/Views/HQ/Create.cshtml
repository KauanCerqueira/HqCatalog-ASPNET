@model HqCatalog.Business.Models.Hq

@{
    ViewData["Title"] = "Adicionar Nova HQ";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-6 d-flex flex-column align-items-center">
            <div class="hq-card-details">
                <div class="hq-editora-details" id="editoraLabel" style="background-color: #999;">
                    EDITORA
                </div>
                <img id="previewImage" src="~/imagens/hqs/placeholder.jpg" class="hq-image-details" alt="Pré-visualização da HQ">
                <input type="file" name="ImagemArquivo" id="ImagemArquivo" class="form-control mt-3" accept="image/*">
            </div>
        </div>

        <div class="col-md-6 hq-info-container">
            <h1 class="hq-title">Adicionar Nova HQ</h1>

            <form id="formCadastro" asp-action="Create" method="post" enctype="multipart/form-data">
                @Html.AntiForgeryToken()

                <label><strong>Título:</strong></label>
                <input type="text" name="Titulo" id="Titulo" class="form-control" required>

                <label><strong>Autor:</strong></label>
                <input type="text" name="Autor" id="Autor" class="form-control" required>

                <label><strong>Editora:</strong></label>
                <input list="editoras" name="Editora" id="Editora" class="form-control" required>

                <datalist id="editoras">
                    <option value="DC Comics">
                    <option value="Marvel Comics">
                    <option value="Panini">
                    <option value="Image Comics">
                    <option value="Shueisha">
                </datalist>

                <label><strong>Ano de Publicação:</strong></label>
                <input type="number" name="AnoPublicacao" id="AnoPublicacao" class="form-control" required>

                <label><strong>Gênero:</strong></label>
                <input type="text" name="Genero" id="Genero" class="form-control" required>

                <label><strong>Personagem:</strong></label>
                <input type="text" name="Personagem" id="Personagem" class="form-control" required>

                <label><strong>Sinopse:</strong></label>
                <textarea name="DescricaoCompleta" id="DescricaoCompleta" class="form-control" rows="3" required></textarea>

                <label><strong>Descrição Completa HQ:</strong></label>
                <textarea name="Sinopse" id="Sinopse" class="form-control" rows="3" required></textarea>

                <button type="submit" class="btn btn-danger w-100 mt-3">
                    <i class="fa fa-save"></i> Cadastrar HQ
                </button>
            </form>
        </div>
    </div>
</div>


<script>
       document.addEventListener("DOMContentLoaded", function () {
        const formEdicao = document.getElementById("formEdicao");
        const imgPreview = document.getElementById("previewImagem");
        const imgInput = document.getElementById("imagemUpload");
        const editoraInput = document.getElementById("Editora");
        const editoraLabel = document.getElementById("editoraBubble");
        const removerImagem = document.getElementById("removerImagem");

        const coresEditoras = {
            "Marvel Comics": "#D32F2F",
            "DC Comics": "#1976D2",
            "Panini": "#FBC02D",
            "Image Comics": "#757575",
            "Shueisha": "#2E7D32"
        };

        // Atualiza o nome e cor da editora ao digitar
        editoraInput.addEventListener("input", function () {
            editoraBubble.textContent = editoraInput.value || "EDITORA";
            editoraBubble.style.backgroundColor = coresEditoras[editoraInput.value] || "#999";
        });

        // Pré-visualização da imagem ao selecionar
        imgInput.addEventListener("change", function () {
            if (imgInput.files && imgInput.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    imgPreview.src = e.target.result;
                };
                reader.readAsDataURL(imgInput.files[0]);
            }
        });

        // Evento para remover imagem
        removerImagem.addEventListener("click", function () {
            imgPreview.src = "/imagens/hqs/placeholder.jpg";
            imgInput.value = "";
        });

        formEdicao.addEventListener("submit", function (event) {
            event.preventDefault();

            const formData = new FormData(formEdicao);

            console.log("🔹 Dados enviados:");
            for (let [key, value] of formData.entries()) {
                console.log(`➡ ${key}:`, value);
            }

            fetch(formEdicao.action, {
                method: "POST",
                body: formData,
                headers: {
                    'RequestVerificationToken': document.querySelector('[name="__RequestVerificationToken"]').value
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.sucesso) {
                    console.log("✅ Alteração realizada com sucesso!");
                    window.location.href = data.redirectUrl;
                } else {
                    console.error("❌ Erros na edição:", data.erros);
                }
            })
            .catch(error => {
                console.error("🚨 Erro:", error);
            });
        });
    });

</script>

 


